import threading

class fibonacciThread(threading.Thread):
    def run(self):
        self.result = []
        a, b = 0, 1
        self.result.append(a)
        while b <= 10000:
            self.result.append(b)
            a, b = b, a + b

class squareThread(threading.Thread):
    def run(self):
        self.result = []
        for num in range(1, 10001):
            self.result.append(num**2)

class cubeThread(threading.Thread):
    def run(self):
        self.result = []
        for num in range(1, 10001):
            self.result.append(num**3)

# User Input for selecting the operation
print("Please select any operations:")
print("1. Fibonacci Series")
print("2. Square Numbers")
print("3. Cube Numbers")

choice = int(input("Pick between (1, 2, or 3): "))

# Create and start the threads based on the user's choice
if choice == 1:
    fib_Thread = fibonacciThread()
    fib_Thread.start()
    fib_Thread.join()
    print("Fibonacci Series:")
    print(fib_Thread.result)
elif choice == 2:
    sq_Thread = squareThread()
    sq_Thread.start()
    sq_Thread.join()
    print("Square Numbers:")
    print(sq_Thread.result)
elif choice == 3:
    cube_Thread = cubeThread()
    cube_Thread.start()
    cube_Thread.join()
    print("Cube Numbers:")
    print(cube_Thread.result)
else:
    print("Invalid. Please select 1, 2, or 3.")